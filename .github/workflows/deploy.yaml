name: Deployment

on:
  push:
    branches:
      - main
      - staging
      - dev

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Deploy
    env:
      IS_DEV: ${{ github.ref == 'refs/heads/dev' }}
    strategy:
      matrix:
        value:
          [
            'bonds',
            'carbonmark',
            'protocol-metrics',
            'vesting',
            'user-carbon',
            'pairs',
            'celo-bridged-carbon',
            'ethereum-bridged-carbon',
            'polygon-bridged-carbon',
            'polygon-digital-carbon',
          ]
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: '${{ matrix.value }}'

      # Generate code and check for uncommitted changes
      # https://github.com/marketplace/actions/check-uncommitted-changes
      - name: Generate Subgraph Code
        run: npm run codegen
        working-directory: '${{ matrix.value }}'
      - name: Check for uncommitted changes
        id: check-changes
        uses: mskri/check-uncommitted-changes-action@v1.0.1
      - name: Evaluate if there are changes
        if: steps.check-changes.outputs.outcome == failure()
        run: echo "There are uncommitted changes - execute 'npm run codegen' locally and commit the generated files!"

      - name: Build Subgraph
        run: npm run build
        working-directory: '${{ matrix.value }}'
      # TODO: add matchstick test suite
      # - name: Run Tests
      #   run: npm run test
      #   working-directory: "${{ matrix.value }}"

      - name: Staging, dev or main
        id: determine_subgraph
        run: |
          short_sha=$(git rev-parse --short "$GITHUB_SHA")
          echo "short_sha=${short_sha}" >> $GITHUB_OUTPUT

          if [[ "$IS_DEV" == "true" ]]
          then
              echo "subgraph=${{ matrix.value }}-${short_sha}" >> $GITHUB_OUTPUT
              return
          fi

          if [[ "$REF" == "refs/heads/staging" ]]
          then
              PREFIX="staging-"
          fi;


          if [[ "${{ matrix.value }}" =~ .*"-".*"-carbon".* ]]
          then
              echo "subgraph=${PREFIX}${{ matrix.value }}" >> $GITHUB_OUTPUT
          else
              echo "subgraph=${PREFIX}klimadao-${{ matrix.value }}" >> $GITHUB_OUTPUT
          fi
        env:
          REF: ${{ github.ref }}
      - name: Deploy Dev Subgraph to Studio
        if: ${{ env.IS_DEV == 'true' }}
        run: ../node_modules/.bin/graph deploy --studio --deploy-key ${{ secrets.SUBGRAPH_STUDIO_DEPLOY_KEY }} dev --version-label ${{ steps.determine_subgraph.outputs.subgraph  }}
        working-directory: '${{ matrix.value }}'
      - name: Deploy Subgraph to Studio
        if: ${{ env.IS_DEV != 'true' }}
        run: ../node_modules/.bin/graph deploy --studio --deploy-key ${{ secrets.SUBGRAPH_STUDIO_DEPLOY_KEY }} ${{ steps.determine_subgraph.outputs.subgraph }} --version-label ${{ steps.determine_subgraph.outputs.short_sha }}
        working-directory: '${{ matrix.value }}'
      - name: Deploy Subgraph to Alchemy Hosted Service
        if: ${{ (matrix.value == 'carbonmark' || matrix.value == 'polygon-digital-carbon' || matrix.value == 'pairs' || matrix.value == 'ethereum-bridged-carbon') && env.IS_DEV != 'true' }}
        run: ../node_modules/.bin/graph deploy ${{ steps.determine_subgraph.outputs.subgraph }} --deploy-key ${{ secrets.SUBGRAPH_ALCHEMY_HOSTED_SERVICE_DEPLOY_KEY }} --node https://subgraphs.alchemy.com/api/subgraphs/deploy --ipfs https://ipfs.satsuma.xyz --version-label ${{ steps.determine_subgraph.outputs.short_sha }}
        working-directory: '${{ matrix.value }}'
